
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>English & Odia Learning Hub</title>
    <style>
    * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg,     #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            text-align: center;
            margin-bottom: 40px;
            background: white;
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        
        .header h1 {
            font-size: 2.5rem;
            color: #4a5568;
            margin-bottom: 10px;
        }
        
        .header p {
            font-size: 1.1rem;
            color: #718096;
        }
        
        .nav-tabs {
            display: flex;
            justify-content: center;
            margin-bottom: 30px;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .tab-btn {
            padding: 12px 24px;
            background: white;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        
        .tab-btn.active {
            background: #4299e1;
            color: white;
            transform: translateY(-2px);
        }
        
        .tab-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0,0,0,0.15);
        }
        
        .content-section {
            display: none;
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        
        .content-section.active {
            display: block;
        }
        
        .word-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .word-card {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            padding: 20px;
            border-radius: 15px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .word-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.2);
        }
        
        .word-card h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
        }
        
        .word-card p {
            font-size: 1.1rem;
            opacity: 0.9;
        }
        
        .sentence-card {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            border-left: 5px solid #4299e1;
        }
        
        .sentence-card:hover {
            transform: translateX(10px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        }
        
        .sentence-english {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 10px;
        }
        
        .sentence-odia {
            font-size: 1.1rem;
            color: #4a5568;
            font-style: italic;
        }
        
        .search-box {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #e2e8f0;
            border-radius: 25px;
            font-size: 1rem;
            margin-bottom: 30px;
            outline: none;
            transition: all 0.3s ease;
        }
        
        .search-box:focus {
            border-color: #4299e1;
            box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);
        }
        
        .category-filter {
            display: flex;
            gap: 10px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }
        
        .filter-btn {
            padding: 8px 16px;
            background: #f7fafc;
            border: 2px solid #e2e8f0;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }
        
        .filter-btn.active {
            background: #4299e1;
            color: white;
            border-color: #4299e1;
        }
        
        .audio-btn {
            background: #48b;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.8rem;
            margin-left: 10px;
            transition: all 0.3s ease;
        }
        
        .audio-btn:hover {
            background: #38a169;
            transform: scale(1.05);
        }
        
        .progress-bar {
            width: 100%;
            height: 8px;
            background: #e2e8f0;
            border-radius: 4px;
            margin: 20px 0;
            overflow: hidden;
        }
        
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #4299e1, #48bb78);
            width: 0%;
            transition: width 0.3s ease;
        }
        
        @media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }
            
            .word-grid {
                grid-template-columns: 1fr;
            }
            
            .nav-tabs {
                flex-direction: column;
                align-items: center;
            }
        }
        }
    </style>
</head>
<body>



    <div class="container">
        <div class="header">
            <h1>üåü English & Odia Learning Hub</h1>
            <h2>Sublan Production</h2>
            <p>Master both languages with interactive lessons, vocabulary, and sentences</p>
            <div class="progress-bar">
                <div class="progress-fill" id="progressFill"></div>
            </div>
            <p id="progressText">Progress: 0% Complete</p>
        </div>
        
        <div class="nav-tabs">
            <button class="tab-btn active" onclick="showTab('vocabulary')">üìö Vocabulary</button>
            
            <button class="tab-btn" onclick="showTab('practice')">üéØ Practice</button>
            <button class="tab-btn" onclick="showTab('lesson')">üìñ Lesson</button>
                       
            
        </div>
        
        <!-- Vocabulary Section -->
        <div id="vocabulary" class="content-section active">
            <h2 style="margin-bottom: 20px; color: #4a5568;">üìö Vocabulary Builder</h2>
            <input type="text" class="search-box" placeholder="Search for English or Odia words..." id="wordSearch" oninput="filterWords()">
            
            <div class="category-filter">
                <button class="filter-btn active" onclick="filterByCategory('all')">All-‡¨∏‡¨¨‡≠Å</button>
                <button class="filter-btn" onclick="filterByCategory('basic')">Basic</button>

                <button class="filter-btn " onclick="filterByCategory('birds')">Birds</button>
               
                <button class="filter-btn" onclick="filterByCategory('family')">Family-‡¨™‡¨∞‡¨ø‡¨¨‡¨æ‡¨∞</button>
                <button class="filter-btn" onclick="filterByCategory('food')">Food-‡¨ñ‡¨æ‡¨¶‡≠ç‡≠ü</button>
                <button   class="filter-btn" onclick="filterByCategory          ('fruit')" >Fruit-‡¨´‡¨≥</button> 
                <button class="filter-btn" onclick="filterByCategory('colors')">Colors-‡¨∞‡¨ô‡≠ç‡¨ó</button>
                <button class="filter-btn" onclick="filterByCategory('numbers')">Numbers</button>
                <button   class="filter-btn" onclick="filterByCategory          ('sports')" >Sports-‡¨ñ‡≠á‡¨≥</button> 
                <button   class="filter-btn" onclick="filterByCategory          ('nature')" >Nature</button> 
                       
                <button   class="filter-btn" onclick="filterByCategory          ('body parts')" >Body Parts-‡¨Ö‡¨ô‡≠ç‡¨ó</button>
             <button   class="filter-btn" onclick="filterByCategory          ('alphabet')" >Alphabet</button>  
             <button   class="filter-btn" onclick="filterByCategory          ('season name')" >Season name-‡¨ã‡¨§‡≠Å ‡¨®‡¨æ‡¨Æ</button>
           <button   class="filter-btn" onclick="filterByCategory          ('7 day')" >7 Day-‡¨µ‡¨æ‡¨∞</button>
           <button   class="filter-btn" onclick="filterByCategory          ('12 month')" >12 Month-‡¨Æ‡¨æ‡¨∏</button>
           <button   class="filter-btn" onclick="filterByCategory          ('direction')" >Direction-‡¨¶‡¨ø‡¨ó</button>
            <button   class="filter-btn" onclick="filterByCategory          ('tree')" >Tree-‡¨ó‡¨õ</button>
                        <button   class="filter-btn" onclick="filterByCategory          ('animal')" >Animal-‡¨™‡¨∂‡≠Å</button>
                                    <button   class="filter-btn" onclick="filterByCategory          ('sentence')" >Sentence</button>
        <button   class="filter-btn" onclick="filterByCategory          ('different scriptures')" >Different scriptures</button>
  
                                                                       
            <div class="word-grid" id="wordGrid">
                <!-- Words will be populated by JavaScript -->
            </div>
        </div>
        
        <!-- Sentences Section -->
        <div id="sentences" class="content-section">
            <h2 style="margin-bottom: 20px; color: #4a5568;">üí¨ Common Sentences</h2>
            <input type="text" class="search-box" placeholder="Search sentences..." id="sentenceSearch" oninput="filterSentences()">
            
            <div class="category-filter">
                <button class="filter-btn active" onclick="filterSentencesByCategory('all')">All</button>
                <button class="filter-btn" onclick="filterSentencesByCategory('greetings')">Greetings</button>
                <button class="filter-btn" onclick="filterSentencesByCategory('daily')">Daily Life</button>
                <button class="filter-btn" onclick="filterSentencesByCategory('questions')">Questions</button>
                <button class="filter-btn" onclick="filterSentencesByCategory('travel')">Travel</button>
                
            </div>
            
            <div id="sentenceList">
                <!-- Sentences will be populated by JavaScript -->
            </div>
        </div>
 
                
            </div>
            
            <div class="word-grid" id="wordGrid">
        <!-- Practice Section -->
        <div id="practice" class="content-section">
            <h2 style="margin-bottom: 20px; color: #4a5568;">üéØ Practice Quiz</h2>
            <div id="quizContainer">
                <div id="quizQuestion" style="font-size: 1.3rem; margin-bottom: 20px; padding: 20px; background: #f7fafc; border-radius: 10px;"></div>
                <div id="quizOptions" style="display: grid; gap: 10px; margin-bottom: 20px;"></div>
                <button onclick="nextQuestion()" style="padding: 12px 24px; background: #4299e1; color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 1rem;">Next Question</button>
                <div id="quizScore" style="margin-top: 20px; font-size: 1.1rem; font-weight: 600;"></div>
            </div>
        </div>
        
        <!-- Lesson Section -->
        <div id="lessons" class="content-section">
            <h2 style="margin-bottom: 20px; color: #4a5568;">üìñ Structured lesson</h2>
            <div style="display: grid; gap: 20px;">
                <div class="sentence-card" onclick="startLesson('basics')">
                    <div class="sentence-english">Lesson 1: Basic Greetings & Introductions</div>
                    <div class="sentence-odia">Learn essential greetings and how to introduce yourself</div>
                </div>
                <div class="sentence-card" onclick="startLesson('family')">
                    <div class="sentence-english">Lesson 2: Family Members & Relationships</div>
                    <div class="sentence-odia">Vocabulary for family members and relationships</div>
                </div>
                <div class="sentence-card" onclick="startlesson('numbers')">
                    <div class="sentence-english">Lesson 3: Numbers & Counting</div>
                    <div class="sentence-odia">Learn numbers from 1-100 in both languages</div>
                </div>
                <div class="sentence-card" onclick="startLesson('daily')">
                    <div class="sentence-english">Lesson 4: Daily Activities</div>
                    <div class="sentence-odia">Common phrases for everyday activities</div>
                </div>
            </div>
        </div>
    </div>
    

    <script>
        // Vocabulary data
        const vocabulary = [
            {english: "Hello", odia: "‡¨®‡¨Æ‡¨∏‡≠ç‡¨ï‡¨æ‡¨∞ ", category: "basic"},
            {english: "Thank you", odia: "‡¨ß‡¨®‡≠ç‡≠ü‡¨¨‡¨æ‡¨¶ ", category: "basic"},
            {english: "Water", odia: "‡¨™‡¨æ‡¨£‡¨ø ", category: "basic"},
            {english: "Food", odia: "‡¨ñ‡¨æ‡¨¶‡≠ç‡≠ü ", category: "food"},
            {english: "Mother", odia: "‡¨Æ‡¨æ ", category: "family"},
            {english: "Father", odia: "‡¨¨‡¨æ‡¨™‡¨æ ", category: "family"},
            {english: "Brother", odia: "‡¨≠‡¨æ‡¨á ", category: "family"},
            {english: "Sister", odia: "‡¨≠‡¨â‡¨£‡≠Ä ", category: "family"},
            {english: "Red", odia: "‡¨≤‡¨æ‡¨≤ ", category: "colors"},
            {english: "Blue", odia: "‡¨®‡≠Ä‡¨≥ ", category: "colors"},
            {english: "Green", odia: "‡¨∏‡¨¨‡≠Å‡¨ú ", category: "colors"},
            {english: "One", odia: "‡¨è‡¨ï ", category: "numbers"},
            {english: "Two", odia: "‡¨¶‡≠Å‡¨á ", category: "numbers"},
            {english: "Three", odia: "‡¨§‡¨ø‡¨®‡¨ø ", category: "numbers"},
            {english: "Rice", odia: "‡¨≠‡¨æ‡¨§ ", category: "food"},
            {english: "Fish", odia: "‡¨Æ‡¨æ‡¨õ ", category: "food"},
            {english: "House", odia: "‡¨ò‡¨∞ ", category: "basic"},
            {english: "School", odia: "‡¨∏‡≠ç‡¨ï‡≠Å‡¨≤ ", category: "basic"},
            {english: "Book", odia: "‡¨¨‡¨π‡¨ø ", category: "basic"},
            {english: "Good", odia: "‡¨≠‡¨≤ ", category: "basic"},
            {english:    
            "Song", odia: "‡¨ó‡≠Ä‡¨§",           category:    "basic"},
            {english:     "Hero", odia:"‡¨®‡¨æ‡≠ü‡¨ï",           category:   "basic"},
            {english:     "Society", odia:"‡¨∏‡¨Æ‡¨æ‡¨ú",      category:    "basic"},
            {english:    "Law", odia:  "",         category:    "basic"},
            {english:     "Sack", odia:"",         category:    "basic"},
            {english:    "Rent", odia: "‡¨≠‡¨°‡¨º‡¨æ",          category:     "basic"},
            {english:     "Commission", odia:        "",          category:    "basic"},
            {english:    "Total", odia: "‡¨Æ‡≠ã‡¨ü",         category:   "basic"},
            {english:    "Moon", odia: "‡¨ö‡¨®‡≠ç‡¨¶‡≠ç‡¨∞",     category:   "basic"},
            {english:     "Door", odia:         "‡¨¶‡¨∞‡¨ú‡¨æ",          category:    "basic"},
            {english:   "Music", odia: "‡¨∏‡¨Ç‡¨ó‡≠Ä‡¨§",        category:    "basic"},
            {english:    "Flute", odia: "‡¨¨‡¨Ç‡¨∂‡≠Ä",        category:     "basic"}, 
            {english:     "Run", odia: "‡¨¶‡¨â‡¨°‡¨º‡¨ø‡¨¨‡¨æ",        category:    "basic"},
            {english:    "Mud", odia: "‡¨ï‡¨æ‡¨¶‡≠Å‡¨Ö",        category:    "basic"},
            {english:    "Dancer", odia: "‡¨®‡¨æ‡¨ü‡≠ç‡≠ü‡¨ï‡¨æ‡¨∞",    category:    "basic"},
            {english:    "Painter", odia: "‡¨ö‡¨ø‡¨§‡≠ç‡¨∞‡¨ï‡¨æ‡¨∞",    category:    "basic"},
            {english:    "Cricket", odia: "‡¨ï‡≠ç‡¨∞‡¨ø‡¨ï‡≠á‡¨ü‡≠ç",          category:    "sports"},
            {english:    "prize", odia: "‡¨™‡≠Å‡¨∞‡¨∏‡≠ç‡¨ï‡¨æ‡¨∞",         category:   "basic"},
            {english:    "Flag", odia: "‡¨™‡¨§‡¨ï‡¨æ", category: "basic"},
            {english:    "Desert",    odia: "‡¨Æ‡¨∞‡≠Å‡¨≠‡≠Ç‡¨Æ‡¨ø",    category:    "nature"},
            {english:    "Onion", odia: "‡¨™‡¨ø‡¨Ü‡¨ú",     category:   "food"},
            {english:     "Road", odia: "‡¨∞‡¨æ‡¨∏‡≠ç‡¨§‡¨æ",     category:    "basic"},
            {english:    "Papaya", odia: "‡¨Ö‡¨Æ‡≠É‡¨§", category: "food"},
            {english:    "Tomato", odia: "‡¨ü‡¨Æ‡¨æ‡¨ü‡≠ã", category:  "food"},
            {english:    "Hair", odia: "‡¨ö‡≠Å‡¨ü‡¨ø",  category:    "body parts"},
            {english:    "Nose", odia: "‡¨®‡¨æ‡¨ï", category:    "body parts"}, 
            {english:    "Hand", odia: "‡¨π‡¨æ‡¨§",       category:    "body parts"},
            {english:    "Finger", odia: "‡¨Ü‡¨ô‡≠ç‡¨ó‡≠Å‡¨†‡¨ø", category: "body parts"},
            {english:     "Room",  odia:  "‡¨ï‡≠ã‡¨†‡¨∞‡≠Ä",   category:    "basic"},
            {english:     "Nib", odia: "‡¨Æ‡≠Å‡¨®",  category:    "basic"},
            {english:    "All", odia: "‡¨∏‡¨Æ‡¨∏‡≠ç‡¨§‡≠á", category: "family"},
            {english:    "Who", odia: "‡¨ï‡¨ø‡¨è", category:    "basic"},
            {english:    "What", odia: "‡¨ï‡¨Ö‡¨£", category:    "basic"},
            {english:    "These", odia: "‡¨è‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï",   category:    "basic"},
            {english:     "Toy", odia: "‡¨ñ‡≠á‡¨≥‡¨®‡¨æ",    category:     "basic"},
            {english:    "This", odia: "‡¨è‡¨π‡¨æ", category: "basic"},
            {english:    "Its",  odia: "‡¨è‡¨π‡¨ø", category: "basic"},
            {english:    "A",  odia:  "‡¨è", category: "alphabet"},
            {english:    "Power",  odia: "‡¨ï‡≠ç‡¨∑‡¨Æ‡¨§‡¨æ", category: "basic"},
            {english:    "Harm", odia: "‡¨ï‡≠ç‡¨∑‡¨§‡¨ø", category: "basic"},
            {english:    "Aim",  odia: "‡¨≤‡¨ï‡≠ç‡¨∑‡≠ç‡≠ü", category: "basic"},
            {english:    "B", odia:   "‡¨¨‡¨ø", category: "alphabet"},
            {english:    "Autumn", odia:         "‡¨∂‡¨∞‡¨§ ‡¨ã‡¨§‡≠Å",  category:     "season name"},
            {english:       "Spring", odia:   "‡¨¨‡¨∏‡¨®‡≠ç‡¨§ ‡¨ã‡¨§‡≠Å",  category:    "season name"},
            {english:     "Dew", odia: "‡¨π‡≠á‡¨Æ‡¨®‡≠ç‡¨§ ‡¨ã‡¨§‡≠Å", category: "season name"},
            {english:     "Rainy", odia:   "‡¨¨‡¨∞‡≠ç‡¨∑‡¨æ ‡¨ã‡¨§‡≠Å",  category:    "season name"},
            {english:    "Summer",    odia:   "‡¨ó‡≠ç‡¨∞‡≠Ä‡¨∑‡≠ç‡¨Æ ‡¨ã‡¨§‡≠Å",  category:    "season name"},
            {english:    "Winter", odia:       "‡¨∂‡≠Ä‡¨§ ‡¨ã‡¨§‡≠Å", category: "season name"},
            {english:    "January", odia:        "‡¨ú‡¨æ‡¨®‡≠Å‡¨Ü‡¨∞‡≠Ä", category: "12 month"},
            {english:      "February", odia:        "‡¨´‡≠á‡¨¨‡≠É‡¨Ü‡¨∞‡≠Ä", category: "12 month"},
            {english:    "March",     odia:        "‡¨Æ‡¨æ‡¨∞‡≠ç‡¨ö‡≠ç‡¨ö",   category:    "12 month"},
            {english:     "April", odia:          "‡¨è‡¨™‡≠ç‡¨∞‡¨ø‡¨≤", category:    "12 month"},
            {english:     "May", odia: "‡¨Æ‡¨á", category: "12 month"},
            {english:      "June", odia:        "‡¨ú‡≠Å‡¨®‡≠ç", category:          "12 month"},
            {english:         "July", odia:         " ‡¨ú‡≠Å‡¨≤‡¨æ‡¨á", category:   "12 month"},
            {english:     "August", odia:  "‡¨Ö‡¨ó‡¨∑‡≠ç‡¨ü", category:     "12 month"},
            {english:    "September", odia:    "‡¨∏‡≠á‡¨™‡≠ç‡¨ü‡≠á‡¨Æ‡≠ç‡¨¨‡¨∞", category:  "12 month"},
            {english:    "October", odia:  "‡¨Ö‡¨ï‡≠ç‡¨ü‡≠ã‡¨¨‡¨∞", category:     "12 month"},
            {english: "November", odia:    "‡¨®‡¨≠‡≠á‡¨Æ‡≠ç‡¨¨‡¨∞", category:     "12 month"},
            {english:    "December", odia:        " ‡¨°‡¨ø‡¨∏‡≠á‡¨Æ‡≠ç‡¨¨‡¨∞", category: "12 month"},
            {english:      "East", odia:        "‡¨™‡≠Ç‡¨∞‡≠ç‡¨¨ ‡¨¶‡¨ø‡¨ó", category: "direction"},
            {english:    "West", odia: "‡¨™‡¨∂‡≠ç‡¨ö‡¨ø‡¨Æ ‡¨¶‡¨ø‡¨ó", category:    "direction"},
            {english:    "North", odia: "‡¨â‡¨§‡≠ç‡¨§‡¨∞ ‡¨¶‡¨ø‡¨ó", category:    "direction"},
            {english:    "South", odia: "‡¨¶‡¨ï‡≠ç‡¨∑‡¨ø‡¨£ ‡¨¶‡¨ø‡¨ó", category:    "direction"},
            {english:     "Black", odia:      "‡¨ï‡¨≥‡¨æ", category: "colors"},
            {english:     "Crimson", odia:         "‡¨ó‡¨æ‡¨¢‡¨º ‡¨®‡¨æ‡¨≤‡¨ø", category: "colors"},
            {english:   "Grey", odia:  "‡¨ß‡≠Ç‡¨∏‡¨∞", category:  "colors"},
            {english:      "Orange", odia: "‡¨ï‡¨Æ‡¨≥‡¨æ", category:    "colors"},
            {english:    "Purple", odia: "‡¨¨‡¨æ‡¨á‡¨ó‡¨£", category:     "colors"},
            {english:    "Rose", odia: "‡¨ó‡≠ã‡¨≤‡¨æ‡¨™‡¨ø", category:    "colors"},
            {english:    "Red", odia: "‡¨®‡¨æ‡¨≤‡¨ø", category:    "colors"},
            {english:    "White", odia: "‡¨ß‡¨≥‡¨æ", category:     "colors"},
            {english:    "Yellow", odia:        "‡¨π‡¨≥‡¨¶‡¨ø‡¨Ü", category:    "colors"},
        {english:        "Sunday", odia:        "‡¨∞‡¨¨‡¨ø‡¨¨‡¨æ‡¨∞", category:    "7 day"},
        {english: "Monday", odia: "‡¨∏‡≠ã‡¨Æ‡¨¨‡¨æ‡¨∞", category:    "7 day"},
        {english:  "Tuesday", odia: "‡¨Æ‡¨ô‡≠ç‡¨ó‡¨≥‡¨¨‡¨æ‡¨∞", category:    "7 day"},
        {english:        "Wednesday", odia: "‡¨¨‡≠Å‡¨ß‡¨¨‡¨æ‡¨∞", category:  "7 day"},
        {english:        "Thursday", odia: "‡¨ó‡≠Å‡¨∞‡≠Å‡¨¨‡¨æ‡¨∞", category:  "7 day"},
        {english:        "Friday", odia: "‡¨∂‡≠Å‡¨ï‡≠ç‡¨∞‡¨¨‡¨æ‡¨∞", category:   "7 day"},
        {english:        "Saturday", odia: "‡¨∂‡¨®‡¨ø‡¨¨‡¨æ‡¨∞", category:   "7 day"},
        {english:        "Chiken", odia:        "‡¨ï‡≠Å‡¨ï‡≠Å‡¨°‡¨º‡¨æ ‡¨õ‡≠Å‡¨Ü", category:    "birds"},
        {english: "Bat", odia: "‡¨¨‡¨æ‡¨¶‡≠Å‡¨°‡¨ø", category: "birds"},
        {english: "Cook", odia: "‡¨ï‡≠Å‡¨ï‡≠Å‡¨°‡¨º‡¨æ", category: "birds"},
        {english: "Crow", odia: "‡¨ï‡¨æ‡¨â", category: "birds"},
        {english:"Dove", odia: "‡¨ï‡¨™‡≠ã‡¨§", category: "birds"},
        {english: "Duck", odia: "‡¨¨‡¨§‡¨ï", category: "birds"},
        {english: "Kite", odia: "‡¨ö‡¨ø‡¨≤", category:    "birds"},
        {english: "Owl", odia: "‡¨™‡≠á‡¨ö‡¨æ", category: "birds"},
        {english: "Pigeon", odia: "‡¨™‡¨æ‡¨∞‡¨æ", category: "birds"},
        {english: "Parrot", odia: "‡¨∂‡≠Å‡¨Ü", category: "birds"},
        {english: "Leaf", odia: "‡¨™‡¨§‡≠ç‡¨∞", category: "tree"},
        {english: "Palm", odia: "‡¨§‡¨æ‡¨≥", category: "tree"},
        {english: "Root", odia: "‡¨ö‡≠á‡¨∞", category: "tree"},
        {english: "Date", odia: "‡¨ñ‡¨ú‡≠Å‡¨∞‡≠Ä", category: "tree"},
        {english: "Banya n", odia: "‡¨¨‡¨∞‡¨ó‡¨õ", category: "tree"},
        {english: "Sugar cane", odia: "‡¨Ü‡¨ñ‡≠Å", category: "tree"},
        {english: "Ass", odia: "‡¨ó‡¨ß", category: "animal"},
        {english: "Bull", odia: "‡¨∑‡¨£‡≠ç‡¨¢", category: "animal"},
        {english: "Bear", odia: "‡¨≠‡¨æ‡¨≤‡≠Å", category: "animal"},
        {english: "Buffalo", odia: "‡¨Æ‡¨π‡¨ø‡¨∑‡¨ø", category: "animal"},
        {english: "Camel", odia: "‡¨ì‡¨ü", category: "animal"},
        {english: "Cow", odia: "‡¨ó‡¨æ‡¨à", category: "animal"},
        {english: "Calf", odia: "‡¨¨‡¨æ‡¨õ‡≠Å‡¨∞‡≠Ä", category: " animal"},
        {english: "Dog", odia: "‡¨ï‡≠Å‡¨ï‡≠Å‡¨∞", category: "animal"},
        {english: "How are you ", odia: "‡¨§‡¨Æ‡≠á ‡¨ï‡≠á‡¨Æ‡¨ø‡¨§‡¨ø ‡¨Ö‡¨õ ", category: "sentence"},
        {english: "That is a book", odia: "‡¨è‡¨π‡¨æ ‡¨ó‡≠ã‡¨ü‡¨ø‡¨è ‡¨¨‡¨π‡¨ø", category: "sentence"},
        {english: "That is raja's book", odia: "‡¨§‡¨æ‡¨π‡¨æ ‡¨∞‡¨æ‡¨ú‡¨æ‡¨∞ ‡¨¨‡¨π‡¨ø", category: "sentence"},
        {english: "What is this ?", odia: "‡¨è‡¨π‡¨æ ‡¨ï'‡¨£", category: "sentence"},
        {english: "This is a pencil", odia: "‡¨è‡¨π‡¨æ ‡¨ó‡≠ã‡¨ü‡¨ø‡¨è ‡¨™‡≠á‡¨®‡¨∏‡¨ø‡¨≤‡≠ç", category: "sentence"},
        {english: "What is that ?", odia: "‡¨§‡¨æ‡¨π‡¨æ ‡¨ï'‡¨£ ?", category: "sentence"},
        {english: "That is not a book", odia: "‡¨§‡¨æ‡¨π‡¨æ ‡¨ó‡≠ã‡¨ü‡¨ø‡¨è ‡¨¨‡¨π‡¨ø ‡¨®‡≠Å‡¨π‡≠á‡¨Å", category: "sentence"},
        {english: "He is a teacher", odia: "‡¨∏‡≠á ‡¨ú‡¨£‡≠á ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨ï", category: "sentence"},
        {english: "I am your teacher", odia: "‡¨Æ‡≠Å‡¨Å ‡¨§‡≠Å‡¨Æ ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨ï", category: "sentence"},
        {english: "I am not your friend", odia: "‡¨Æ‡≠Å‡¨Å ‡¨§‡≠Å‡¨Æ‡¨∞ ‡¨∏‡¨æ‡¨ô‡≠ç‡¨ó ‡¨®‡≠Å‡¨π‡≠á‡¨Å", category: "sentence"},
        {english: "Where is my bicycle?", odia: "‡¨Æ‡≠ã ‡¨∏‡¨æ‡¨á‡¨ï‡≠á‡¨≤‡≠ç ‡¨ï‡≠á‡¨â‡¨Å‡¨†‡¨ø ?", category: "sentence"},
        {english: "Raja's handkerchief is in her pocket", odia: "‡¨∞‡¨æ‡¨ú‡¨æ‡¨∞ ‡¨∞‡≠Å‡¨Æ‡¨æ‡¨≤ ‡¨§‡¨æ ‡¨™‡¨ï‡≠á‡¨ü‡¨∞‡≠á ‡¨Ö‡¨õ‡¨ø", category: "sentence"},
        {english: "You are there", odia: "‡¨§‡≠Å‡¨Æ‡≠ç‡¨≠‡≠á‡¨Æ‡¨æ‡¨®‡≠á ‡¨∏‡≠á‡¨†‡¨ø ‡¨Ö‡¨õ", category: "sentence"},
        {english: "Servant", odia: "‡¨ö‡¨æ‡¨ï‡¨∞", category: "basic"},
        {english: "C", odia: "‡¨∏‡¨ø", category: "alphabet"},
        {english: "Face", odia: "‡¨Æ‡≠Å‡¨π‡¨Å", category: "body parts"},
        {english: "Fore head", odia: "‡¨ï‡¨™‡¨æ‡¨≥", category: "body parts"},
        {english: "Heart", odia: "‡¨π‡≠É‡¨§‡¨™‡¨ø‡¨£‡≠ç‡¨°", category: " body parts"},
        {english: "Head", odia: "‡¨Æ‡≠Å‡¨£‡≠ç‡¨°", category: "body parts"},
        {english: "Leg", odia: "‡¨ó‡≠ã‡¨°‡¨º", category: "body parts"},
        {english: "Mouth", odia: "‡¨™‡¨æ‡¨ü‡¨ø", category: "body parts"},
        {english: "Back", odia: "‡¨™‡¨ø‡¨†‡¨ø", category: "body parts"},
        {english: "Tooth", odia: "‡¨¶‡¨æ‡¨®‡≠ç‡¨§", category: "body parts"},
        {english: "Foot", odia: "‡¨™‡¨æ‡¨¶", category: "body parts",  category: "body parts"},
        {english: "Blood", odia: "‡¨∞‡¨ï‡≠ç‡¨§", category: "body parts"},
        {english: "D", odia: "‡¨°‡¨ø", category: "alphabet"},
        {english: "E", odia: "‡¨á", category: "alphabet"},
        {english: "F", odia: "‡¨è‡¨´‡≠ç", category: "alphabet"},
        {english: "G", odia: "‡¨ú‡¨ø", category: "alphabet"},
        {english: "H", odia: "‡¨è‡¨ö‡≠ç", category: "alphabet"},
        {english: "Eyebrow", odia: "‡¨≠‡≠ç‡¨∞‡≠Å‡¨≤‡¨§‡¨æ", category: "body parts"},
        {english: "Knee", odia: "‡¨Ü‡¨£‡≠ç‡¨†‡≠Å", category: "body parts"},
        {english: "Neck", odia: "‡¨¨‡≠á‡¨ï", category: "body parts"},
        {english: "Heel", odia: "‡¨ó‡≠ã‡¨á‡¨†‡¨ø", category: "body parts"},
        {english: "Chest", odia: "‡¨õ‡¨æ‡¨§‡¨ø", category: "body parts"},
        {english: "Wrist", odia: "‡¨ï‡¨ö‡¨ü‡¨ø", category: "body parts"},
        {english: "Toe", odia: "‡¨™‡¨æ‡¨¶ ‡¨Ü‡¨ô‡≠ç‡¨ó‡≠Å‡¨†‡¨ø", category: "body parts"},
        {english: "Eye", odia: "‡¨Ü‡¨ñ‡¨ø", category: "body parts"},
        {english: "Stomach", odia: "‡¨™‡¨æ‡¨ï‡¨∏‡≠ç‡¨•‡¨≥‡≠Ä", category: "body parts"},
        {english: "Body", odia: "‡¨∂‡¨∞‡≠Ä‡¨∞", category: "body parts"},
        {english: "Little finger", odia: "‡¨ï‡¨®‡¨ø‡¨∑‡≠ç‡¨† ‡¨Ü‡¨ô‡≠ç‡¨ó‡≠Å‡¨≥‡¨ø", category: "body parts"},
        {english: "Cheek", odia: "‡¨ó‡¨æ‡¨≤", category: "body parts"},
        {english: "Shoulder", odia: "‡¨ï‡¨æ‡¨®‡≠ç‡¨ß", category: "body parts"},
        {english: "Flesh", odia: "‡¨Æ‡¨æ‡¨Ç‡¨∏", category: "body parts"},
        {english: "Beily", odia: "‡¨™‡≠á‡¨ü", category: "body parts"},
        {english: "Ven", odia: "‡¨∂‡¨ø‡¨∞", category:    "body parts"},
        {english: "Waist", odia: "‡¨Ö‡¨£‡≠ç‡¨ü‡¨æ", category: "body parts"},
        {english: "Rib", odia: "‡¨™‡¨û‡≠ç‡¨ú‡¨∞‡¨æ ‡¨π‡¨æ‡¨°", category: "body parts"},
        {english: "Stool", odia: "‡¨ù‡¨æ‡¨°‡¨º‡¨æ", category: "body parts"},
        {english: "Elbow", odia: "‡¨ï‡¨π‡≠Å‡¨£‡≠Ä", category: "body parts"},
        {english: "Urine", odia: "‡¨™‡¨∞‡¨ø‡¨∏‡≠ç‡¨∞‡¨æ", category: "body parts"},
        {english: "Beard", odia: "‡¨¶‡¨æ‡¨¢‡¨º‡¨ø", category:  "body parts"},
        {english: "Eyelid", odia: "‡¨Ü‡¨ñ‡¨ø‡¨™‡¨§‡¨æ", category: "body parts"},
        {english: "Throat", odia: "‡¨ó‡¨≥‡¨æ", category: "body parts"},
        {english: "Limb", odia: "‡¨Ö‡¨ô‡≠ç‡¨ó", category: "body parts"},
        {english: "Thigh", odia: "‡¨ú‡¨ô‡≠ç‡¨ó", category: "body parts"},
        {english: "Joint", odia:"‡¨ó‡¨£‡≠ç‡¨†‡¨ø", category: "body parts"},
        {english: "Ear", odia: "‡¨ï‡¨æ‡¨®", category:    "body parts"},
        {english: "Bone", odia: "‡¨π‡¨æ‡¨°‡¨º", category: "body parts"},
        {english: "Skin", odia: "‡¨ö‡¨∞‡≠ç‡¨Æ", category: "body parts"},
        {english: "Butter fast", odia: "‡¨≤‡¨π‡≠Å‡¨£‡≠Ä", category: "food"},
        {english: "Bread", odia: "‡¨∞‡≠Å‡¨ü‡¨ø", category: "food"},
        {english: "Curd", odia: "‡¨¶‡¨π‡¨ø", category: "food"},
        {english: "Del", odia: "‡¨°‡¨æ‡¨≤‡¨ø", category: "food"},
        {english: "Ghee", odia: "‡¨ò‡¨ø‡¨Ö", category: "food"},
        {english: "Loaf", odia: "‡¨™‡¨æ‡¨â‡¨Å‡¨∞‡≠Å‡¨ü‡¨ø", category: "food"},
        {english: "Milk", odia: "‡¨¶‡≠Å‡¨ß", category: "food"},
        {english: "Molasses", odia: "‡¨ó‡≠Å‡¨°‡¨º", category: "food"},
        {english: "Oil", odia: "‡¨§‡≠á‡¨≤", category: "food"},
        {english: "Curry", odia: "‡¨§‡¨∞‡¨ï‡¨æ‡¨∞‡≠Ä", category: "food"},
        {english: "Sult", odia: "‡¨≤‡≠Å‡¨£", category: "food"},
        {english: "Wheat", odia: "‡¨ó‡¨π‡¨Æ", category: "food"},
        {english: "Apple", odia: "‡¨∏‡≠á‡¨ì", category: "fruit"},
        {english: "Brinjal", odia: "‡¨¨‡¨æ‡¨á‡¨ó‡¨£", category: "fruit"},
        {english: "Beery", odia: "‡¨ú‡¨æ‡¨Æ‡≠Å", category:"fruit"},
        {english: "Cabbage", odia: "‡¨¨‡¨®‡≠ç‡¨ß‡¨æ‡¨ï‡≠ã‡¨¨‡¨ø", category:"fruit"},
        {english: "Garlic", odia: "‡¨∞‡¨∏‡≠Å‡¨£", category: "fruit"},
        {english: "Grape", odia: "‡¨Ö‡¨ô‡≠ç‡¨ó‡≠Å‡¨∞", category: "fruit"},
        {english: "I", odia: "‡¨Ü‡¨á", category: "alphabet"},
        {english: "J", odia: "‡¨ú‡≠á", category: "alphabet"},
        {english: "K", odia: "‡¨ï‡≠á",  category: "alphabet"},
        {english: "L",   odia: "‡¨è‡¨≤‡≠ç", category: "alphabet"},
        {english: "M", odia: "‡¨è‡¨Æ‡≠ç", category: "alphabet"},
        {english: "N",   odia: "‡¨è‡¨®‡≠ç", category: "alphabet"},
        {english: "O", odia: "‡¨ì",   category: "alphabet"},
        {english: "P", odia: "‡¨™‡¨ø", category: "alphabet"},
        {english: "Q", odia: "‡¨ï‡¨ø‡¨â", category: "alphabet"},
        {english: "R", odia: "‡¨Ü‡¨∞‡≠ç", category: "alphabet"},
        {english: "S", odia: "‡¨è‡¨∏‡≠ç", category: "alphabet"},
        {english: "T", odia: "‡¨ü‡¨ø", category: "alphabet"},
        {english: "U", odia: "‡¨á‡¨â", category: "alphabet"},
        {english: "V", odia: "‡¨≠‡¨ø", category: "alphabet"},
        {english: "W", odia: "‡¨°‡¨º‡¨¨‡≠ç‡¨≤‡≠Å", category: "alphabet"},
        {english: "X", odia: "‡¨è‡¨ï‡¨∏‡≠ç", category: "alphabet"},
        {english: "Y", odia: "‡≠±‡¨æ‡¨á", category: "alphabet"},
        {english: "Z", odia: "‡¨ú‡≠á‡¨°‡≠ç", category: "alphabet"},
        {english: "Botany", odia: "‡¨â‡¨¶‡≠ç‡¨≠‡¨ø‡¨¶ ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Chemistry", odia: "‡¨∞‡¨æ‡¨∏‡¨æ‡≠ü‡¨®‡¨ø‡¨ï ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Horticulture", odia: "‡¨â‡¨¶‡≠ç‡≠ü‡¨æ‡¨® ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Psychology", odia: "‡¨Æ‡¨®‡≠ã‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Home science", odia: "‡¨ó‡≠É‡¨π ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Physiology", odia: "‡¨∂‡¨∞‡≠Ä‡¨∞ ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Geology", odia: "‡¨≠‡≠Ç‡¨§‡¨§‡≠ç‡¨§‡≠ç‡¨µ ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Motion science", odia: "‡¨ó‡¨£‡¨ø‡¨§ ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Civics", odia: "‡¨®‡¨ó‡¨∞ ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Political science", odia: " ‡¨∞‡¨æ‡¨ú‡¨®‡≠Ä‡¨§‡¨ø ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Mineralogy", odia:"‡¨ñ‡¨£‡¨ø‡¨ú ‡¨§‡¨§‡≠ç‡¨§‡≠ç‡¨µ", category: "different srciptures"},
        {english: "Agriculture science", odia: "‡¨ï‡≠É‡¨∑‡¨ø ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Cytology", odia: "‡¨ú‡≠Ä‡¨¨‡¨ï‡≠ã‡¨∑ ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Ornithology", odia: "‡¨™‡¨ï‡≠ç‡¨∑‡≠Ä ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Aunthropology", odia: "‡¨Æ‡¨æ‡¨®‡¨¨ ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Phonetics", odia: "‡¨∏‡≠ç‡¨¨‡¨∞ ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Statistics", odia: "‡¨™‡¨∞‡¨ø‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ‡¨® ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Hyginre", odia: "‡¨∏‡≠ç‡¨¨‡¨æ‡¨∏‡≠ç‡¨•‡≠ç‡≠ü ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Theology", odia: "‡¨ß‡¨∞‡≠ç‡¨Æ‡¨∂‡¨æ‡¨∏‡≠ç‡¨§‡≠ç‡¨∞", category: "different scriptures"},
        {english: "Palmistry", odia: "‡¨∏‡¨æ‡¨Æ‡≠Å‡¨¶‡≠ç‡¨∞‡¨ø‡¨ï ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Pathology", odia: "‡¨®‡¨ø‡¨¶‡¨æ‡¨®‡¨∂‡¨æ‡¨∏‡≠ç‡¨§‡≠ç‡¨∞", category: "different: scriptures"},
        {english: "Law", odia: "‡¨Ü‡¨á‡¨®‡¨∂‡¨æ‡¨∏‡≠ç‡¨§‡≠ç‡¨∞", category: "different scriptures"},
        {english: "Logic", odia: "‡¨§‡¨∞‡≠ç‡¨ï ‡¨∂‡¨æ‡¨∏‡≠ç‡¨§‡≠ç‡¨∞",  category: "different scriptures"},
        {english: "Economics", odia: "‡¨Ö‡¨∞‡≠ç‡¨•‡¨∂‡¨æ‡¨∏‡≠ç‡¨§‡≠ç‡¨∞", category: "different scriptures"},
        {english: "Philosophy", odia: "‡¨¶‡¨∞‡≠ç‡¨∂‡¨®‡¨∂‡¨æ‡¨∏‡≠ç‡¨§‡≠ç‡¨∞", category: "different scriptures"},
        {english: "Astrology", odia: "‡¨ú‡≠ç‡≠ü‡≠ã‡¨§‡¨ø‡¨∑ ‡¨∂‡¨æ‡¨∏‡≠ç‡¨§‡≠ç‡¨∞", category: "different scriptures"},
        {english: "Medical science", odia: "‡¨ö‡¨ø‡¨ï‡¨ø‡¨§‡≠ç‡¨∏‡¨æ ‡¨∂‡¨æ‡¨∏‡≠ç‡¨§‡≠ç‡¨∞", category:    "different scriptures"},
        {english: "Opthamology", odia: "‡¨¶‡≠É‡¨∑‡≠ç‡¨ü‡¨ø ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®", category: "different scriptures"},
        {english: "Earth", odia: "‡¨™‡≠É‡¨•‡¨ø‡¨¨‡≠Ä", category: "nature"},
        {english:  "Universe", odia: "‡¨¨‡¨ø‡¨∂‡≠ç‡¨µ", category: "nature"},
        {english: "Hill", odia: "‡¨™‡¨æ‡¨π‡¨æ‡¨°‡¨º", category: "nature"},
        {english: "Stone", odia: "‡¨™‡¨•‡¨∞", category: "nature"},
        {english: "Mountain", odia: "‡¨™‡¨∞‡≠ç‡¨¨‡¨§", category: "nature"},
        {english: "Peak", odia: "‡¨™‡¨∞‡≠ç‡¨¨‡¨§‡¨∂‡≠É‡¨ô‡≠ç‡¨ó", category: "nature"},
        {english: "Axis", odia: "‡¨Ö‡¨ï‡≠ç‡¨∑", category: "nature"},
        {english: "Darkness", odia: "‡¨Ö‡¨®‡≠ç‡¨ß‡¨æ‡¨∞", category: "nature"},
        {english: "Cape", odia: "‡¨Ö‡¨®‡≠ç‡¨§‡¨∞‡≠Ä‡¨™", category: "nature"},
        {english: "Latitude", odia: "‡¨Ö‡¨ï‡≠ç‡¨∑‡¨æ‡¨Ç‡¨∂", category: "nature"},
        {english: "Sky", odia: "‡¨Ü‡¨ï‡¨æ‡¨∂", category: "nature"},
        {english: "Volcano", odia: "‡¨Ü‡¨ó‡≠ç‡¨®‡≠á‡≠ü‡¨ó‡¨ø‡¨∞‡¨ø", category: "nature"},
        {english: "Light", odia: "‡¨Ü‡¨≤‡≠ã‡¨ï", category: "nature"},
        {english: "Rainbow", odia: "‡¨á‡¨®‡≠ç‡¨¶‡≠ç‡¨∞‡¨ß‡¨®‡≠Å", category: "nature"},
        {english: "Valley", odia: "‡¨â‡¨™‡¨§‡≠ç‡≠ü‡¨ï‡¨æ", category: "nature"},
        {english: "Bay", odia: "‡¨â‡¨™‡¨∏‡¨æ‡¨ó‡¨∞", category: "nature"},
        {english: "Air", odia: "‡¨™‡¨¨‡¨®", category: "nature"},
       {english: "Player", odia: "‡¨ñ‡≠á‡¨≥‡¨æ‡¨≥‡¨ø", category: "sports"},
       {english: "Playground", odia: "‡¨ñ‡≠á‡¨≥‡¨™‡¨°‡¨ø‡¨Ü", category: "sports"},
       {english: "Ball", odia: "‡¨™‡≠á‡¨£‡≠ç‡¨°‡≠Å", category: "sports"},
      {english: "Asan", odia: "‡¨Ü‡¨∏‡¨®", category: "sports"},
      {english: "High jump", odia: "‡¨â‡¨ö‡≠ç‡¨ö ‡¨°‡¨ø‡¨Ü‡¨Å", category: "sports"},
      {english: "Lung jump", odia: "‡¨≤‡¨Æ‡≠ç‡¨¨‡¨°‡¨ø‡¨Ü", category: "sports"},
      {english: "Lattoo", odia: "‡¨®‡¨ü‡≠Å", category: "sports"},
      {english: "Eagle", odia: "‡¨ö‡¨ø‡¨≤", category: "birds"},
      {english: "Ostrich", odia: "", category: "birds"},
      {english: "Myna", odia: "", category: "birds"},
      {english: "Peacock", odia: "‡¨Æ‡≠ü‡≠Ç‡¨∞", category: "birds"},
      {english: "Four", odia: "‡¨ö‡¨æ‡¨∞‡¨ø", category: "numbers"},
      {english: "Five", odia: "‡¨™‡¨æ‡¨û‡≠ç‡¨ö", category: "numbers"},
      {english: "Six", odia: "‡¨õ‡¨Ö", category: "numbers"},
      {english: "Seven", odia: "‡¨∏‡¨æ‡¨§", category: "numbers"},
      {english: "Eight", odia: "‡¨Ü‡¨†", category: "numbers"},
      {english: "Nine", odia: "‡¨®‡¨Ö", category: "numbers"},
      {english: "Ten", odia: "‡¨¶‡¨∂", category: "numbers"},
      {english: "Eleven", odia: "‡¨è‡¨ó‡¨æ‡¨∞", category: "numbers"},
      {english: "Twelve", odia: "‡¨¨‡¨æ‡¨Ü‡¨∞", category: "numbers"},
      {english: "Thirteen", odia: "", category: "numbers"},
      {english: "Fourteen", odia: "", category: "numbers"},
      {english: "Fifteen", odia: "‡¨™‡¨®‡≠ç‡¨¶‡¨∞", category: "numbers"},
      {english: "Sixteen", odia: "", category: "numbers"},
      {english: "Seventeen", odia: "", category: "numbers"},
      {english: "Eighteen", odia: "", category: "numbers"},
      {english: " Nineteen", odia: "", category: "numbers"},
      {english: "Twenty", odia: "‡¨ï‡≠ã‡¨°‡¨º‡¨ø‡¨è", category: "numbers"},
      
      
        
        
        
        
        
        
            
            
     
        ];

        // Sentences data
        const sentences = [
            
           
        ];
        

        let currentQuestionIndex = 0;
        let quizScore = 0;
        let totalQuestions = 0;
        let learnedItems = new Set();

        // Initialize the page
        function init() {
            displayWords();
            displaySentences();
            generateQuizQuestion();
            updateProgress();
        }

        // Tab switching
        function showTab(tabName) {
            // Hide all sections
            document.querySelectorAll('.content-section').forEach(section => {
                section.classList.remove('active');
            });
            
            // Remove active class from all buttons
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // Show selected section
            document.getElementById(tabName).classList.add('active');
            
            // Add active class to clicked button
            event.target.classList.add('active');
        }

        // Display vocabulary words
        function displayWords(wordsToShow = vocabulary) {
            const wordGrid = document.getElementById('wordGrid');
            wordGrid.innerHTML = '';
            
            wordsToShow.forEach((word, index) => {
                const wordCard = document.createElement('div');
                wordCard.className = 'word-card';
                wordCard.onclick = () => markAsLearned('word', index);
                
                wordCard.innerHTML = `
                    <h3>${word.english}</h3>
                    <p>${word.odia}</p>
                    <button class="audio-btn" onclick="event.stopPropagation(); speakWord('${word.english}')">üîä Listen</button>
                `;
                
                if (learnedItems.has(`word-${index}`)) {
                    wordCard.style.opacity = '0.7';
                    wordCard.style.border = '3px solid #48bb78';
                }
                
                wordGrid.appendChild(wordCard);
            });
        }

        // Display sentences
        function displaySentences(sentencesToShow = sentences) {
            const sentenceList = document.getElementById('sentenceList');
            sentenceList.innerHTML = '';
            
            sentencesToShow.forEach((sentence, index) => {
                const sentenceCard = document.createElement('div');
                sentenceCard.className = 'sentence-card';
                sentenceCard.onclick = () => markAsLearned('sentence', index);
                
                sentenceCard.innerHTML = `
                    <div class="sentence-english">${sentence.english}</div>
                    <div class="sentence-odia">${sentence.odia}</div>
                    <button class="audio-btn" onclick="event.stopPropagation(); speakWord('${sentence.english}')">üîä Listen</button>
                `;
                
                if (learnedItems.has(`sentence-${index}`)) {
                    sentenceCard.style.opacity = '0.7';
                    sentenceCard.style.border = '3px solid #48bb78';
                }
                
                sentenceList.appendChild(sentenceCard);
            });
        }

        // Filter functions
        function filterWords() {
            const searchTerm = document.getElementById('wordSearch').value.toLowerCase();
            const filtered = vocabulary.filter(word => 
                word.english.toLowerCase().includes(searchTerm) || 
                word.odia.toLowerCase().includes(searchTerm)
            );
            displayWords(filtered);
        }

        function filterSentences() {
            const searchTerm = document.getElementById('sentenceSearch').value.toLowerCase();
            const filtered = sentences.filter(sentence => 
                sentence.english.toLowerCase().includes(searchTerm) || 
                sentence.odia.toLowerCase().includes(searchTerm)
            );
            displaySentences(filtered);
        }

        function filterByCategory(category) {
            // Update active filter button
            document.querySelectorAll('.category-filter .filter-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
            
            if (category === 'all') {
                displayWords();
            } else {
                const filtered = vocabulary.filter(word => word.category === category);
                displayWords(filtered);
            }
        }

        function filterSentencesByCategory(category) {
            // Update active filter button
            document.querySelectorAll('#sentences .category-filter .filter-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
            
            if (category === 'all') {
                displaySentences();
            } else {
                const filtered = sentences.filter(sentence => sentence.category === category);
                displaySentences(filtered);
            }
        }

        // Mark items as learned
        function markAsLearned(type, index) {
            const key = `${type}-${index}`;
            if (learnedItems.has(key)) {
                learnedItems.delete(key);
            } else {
                learnedItems.add(key);
            }
            
            if (type === 'word') {
                displayWords();
            } else {
                displaySentences();
            }
            
            updateProgress();
        }

        // Update progress
        function updateProgress() {
            const totalItems = vocabulary.length + sentences.length;
            const learnedCount = learnedItems.size;
            const percentage = Math.round((learnedCount / totalItems) * 100);
            
            document.getElementById('progressFill').style.width = `${percentage}%`;
            document.getElementById('progressText').textContent = `Progress: ${percentage}% Complete (${learnedCount}/${totalItems} items)`;
        }

        // Quiz functionality
        function generateQuizQuestion() {
            const allItems = [...vocabulary, ...sentences];
            const randomItem = allItems[Math.floor(Math.random() * allItems.length)];
            
            const questionDiv = document.getElementById('quizQuestion');
            const optionsDiv = document.getElementById('quizOptions');
            
            // Randomly choose English to Odia or Odia to English
            const isEnglishToOdia = Math.random() > 0.5;
            
            if (isEnglishToOdia) {
                questionDiv.innerHTML = `What is the Odia translation of: <strong>"${randomItem.english}"</strong>`;
                
                // Generate options
                const correctAnswer = randomItem.odia;
                const wrongAnswers = allItems
                    .filter(item => item.odia !== correctAnswer)
                    .sort(() => Math.random() - 0.5)
                    .slice(0, 3)
                    .map(item => item.odia);
                
                const options = [correctAnswer, ...wrongAnswers].sort(() => Math.random() - 0.5);
                
                optionsDiv.innerHTML = '';
                options.forEach(option => {
                    const button = document.createElement('button');
                    button.textContent = option;
                    button.className = 'filter-btn';
                    button.onclick = () => checkAnswer(option === correctAnswer, button);
                    optionsDiv.appendChild(button);
                });
            } else {
                questionDiv.innerHTML = `What is the English translation of: <strong>"${randomItem.odia}"</strong>`;
                
                const correctAnswer = randomItem.english;
                const wrongAnswers = allItems
                    .filter(item => item.english !== correctAnswer)
                    .sort(() => Math.random() - 0.5)
                    .slice(0, 3)
                    .map(item => item.english);
                
                const options = [correctAnswer, ...wrongAnswers].sort(() => Math.random() - 0.5);
                
                optionsDiv.innerHTML = '';
                options.forEach(option => {
                    const button = document.createElement('button');
                    button.textContent = option;
                    button.className = 'filter-btn';
                    button.onclick = () => checkAnswer(option === correctAnswer, button);
                    optionsDiv.appendChild(button);
                });
            }
        }

        function checkAnswer(isCorrect, button) {
            totalQuestions++;
            if (isCorrect) {
                quizScore++;
                button.style.background = '#48bb78';
                button.style.color = 'white';
            } else {
                button.style.background = '#f56565';
                button.style.color = 'white';
            }
            
            // Disable all option buttons
            document.querySelectorAll('#quizOptions button').forEach(btn => {
                btn.disabled = true;
            });
            
            updateQuizScore();
        }

        function nextQuestion() {
            generateQuizQuestion();
        }

        function updateQuizScore() {
            const percentage = totalQuestions > 0 ? Math.round((quizScore / totalQuestions) * 100) : 0;
            document.getElementById('quizScore').innerHTML = `Score: ${quizScore}/${totalQuestions} (${percentage}%)`;
        }

        // Text-to-speech (basic implementation)
        function speakWord(text) {
            if ('speechSynthesis' in window) {
                const utterance = new SpeechSynthesisUtterance(text);
                utterance.lang = 'en-US';
                speechSynthesis.speak(utterance);
            } else {
                alert('Text-to-speech not supported in your browser');
            }
        }

        // Lesson functionality
        function startLesson(lessonType) {
            alert(`Starting ${lessonType} lesson! This feature will guide you through structured learning with interactive exercises.`);
        }

        // Initialize the application
        init();
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'97592cd6023579fe',t:'MTc1NjI3MjYwOC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
